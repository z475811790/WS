<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org/DTD Mapper 3.0" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xyzdl.mapper.UserMapper">
	<!-- 自定义返回结果集 -->
	<resultMap id="userMap" type="UserBean">
		<id property="id" column="id" javaType="java.lang.Integer"></id>
		<result property="username" column="username" javaType="java.lang.String"></result>
		<result property="password" column="password" javaType="java.lang.String"></result>
		<result property="account" column="account" javaType="java.lang.Double"></result>
	</resultMap>
	<!-- 在各种标签中的id属性必须和接口中的方法名相同 ， id属性值必须是唯一的，不能够重复使用。parameterType属性指明查询时使用的参数类型，resultType属性指明查询返回的结果集类型 -->
	<!-- useGeneratedKeys：（ 仅 对 insert 有 用 ） 这 会 告 诉 MyBatis 使 用 JDBC 的getGeneratedKeys 方法来取出由数据（比如：像 MySQL 和 SQLServer 这样的数据库管理系统的自动递增字段）内部生成的主键。默认值： 
		false。 -->
	<!--keyProperty： （仅对 insert有用）标记一个属性， MyBatis 会通过 getGeneratedKeys或者通过 insert 语句的 selectKey 子元素设置它的值。默认：不设置。 -->
	<!--#{}中的内容，为占位符，当参数为某个JavaBean时，表示放置该Bean对象的属性值 -->


	<insert id="insertUser" useGeneratedKeys="true" keyProperty="user.id">
		insert into t_user (username,password,account)
		values (#{user.username},#{user.password},#{user.account})
	</insert>

	<update id="updateUser">
		update t_user set username=#{u.username},password=#{u.password},account=#{u.account} where id=#{id}
	</update>

	<delete id="deleteUser" parameterType="int">
		delete from t_user where id=#{id}
	</delete>

	<select id="selectUserById" parameterType="int" resultMap="userMap">
		select * from t_user where id=#{id}
	</select>

	<select id="selectAllUser" resultMap="userMap">
		select * from t_user
	</select>




	<!-- 批量操作和foreach标签 -->

	<insert id="batchInsertUser" parameterType="java.util.List">
		insert into t_user values
		<foreach collection="users" item="user" separator=",">
			(null,#{user.username},#{user.password},#{user.account})
		</foreach>
	</insert>


	<delete id="batchDeleteUser">
		delete from t_user where id in (
		<foreach collection="list" item="list" separator=",">
			#{id}
		</foreach>
		)
	</delete>

	<!--collection 为用于遍历的元素（必选），支持数组、List、Set -->
	<!-- item 表示集合中每一个元素进行迭代时的别名. -->
	<!--separator表示在每次进行迭代之间以什么符号作为分隔 符. -->


	<select id="pagerUser" parameterType="java.util.Map" resultMap="userMap">
		select * from t_user where 1=1
		<if test="username!=null">
			and username like '%${username}%'
		</if>
		limit ${index},${pageSize}
	</select>

	<select id="countUser" parameterType="java.util.Map" resultType="int">
		select count(*) from t_user where 1=1
		<if test="username != null">
			and username like '%${username}%'
		</if>
	</select>


</mapper>